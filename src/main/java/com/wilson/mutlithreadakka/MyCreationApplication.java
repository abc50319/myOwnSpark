package com.wilson.mutlithreadakka;import akka.actor.ActorRef;import akka.actor.ActorSystem;import akka.actor.Props;import com.wilson.util.DateUtils;import scala.concurrent.duration.Duration;import java.text.ParseException;import static java.util.concurrent.TimeUnit.SECONDS;public class MyCreationApplication {    static ActorSystem mySystem = ActorSystem.create("myTrackAnalyzeSystem");    static ActorRef actor = mySystem.actorOf(Props.create(MyCreationActor.class)            ,"beginning");    public static void main(String[] args) throws ParseException {        //设置延迟时间delayTime        long nowTime = new DateUtils().getNowTimeSecond();        long minuteTime = new DateUtils().getNextSharpMinute();        long delayTime = minuteTime - nowTime;        System.out.println("delayTime:"+delayTime);        //分钟级别定时        mySystem.scheduler().schedule(                Duration.create(delayTime, SECONDS)                    //延迟执行时间                , Duration.create(60, SECONDS)                //循环执行时间                ,new Runnable() {                    @Override                    public void run() {                        System.out.println("****************");                        actor.tell("gpsCountHour", null);                    }                }                , mySystem.dispatcher());        mySystem.scheduler().schedule(                Duration.create(delayTime, SECONDS)                , Duration.create(85, SECONDS)                ,new Runnable() {                    @Override                    public void run() {                        System.out.println("==================");                        actor.tell("gpsCountDay", null);                    }                }                , mySystem.dispatcher());    }}